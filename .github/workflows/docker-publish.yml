name: Build and Push Docker Image

# El flujo se ejecuta en cada push a la rama main
on:
  push:
    branches:
      - main  # O la rama que prefieras

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Load the .env file
      - name: Load environment variables from .env
        run: |
          if [ ! -f .env ]; then
            echo ".env file not found, aborting!"
            exit 1
          fi
          # Load variables from .env
          set -o allexport
          source .env
          set +o allexport
        env: 
          IMAGE: ${IMAGE}
          OPENFHE_TAG: ${OPENFHE_TAG}
          OPENFHE_SDK_PYTHON_TAG: ${OPENFHE_SDK_PYTHON_TAG}

      # Log in to GHCR (GitHub Container Registry)
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Build the Docker image and pass the environment variables as build arguments
      - name: Build Docker image
        run: |
          docker build \
            --no-cache \
            --build-arg OPENFHE_TAG=${OPENFHE_TAG} \
            --build-arg OPENFHE_SDK_PYTHON_TAG=${OPENFHE_SDK_PYTHON_TAG} \
            -t ghcr.io/${{ github.repository_owner }}/${IMAGE}:${{ github.sha }} \
            -t ghcr.io/${{ github.repository_owner }}/${IMAGE}:${OPENFHE_TAG} .

      # Push the Docker image to GHCR
      - name: Push Docker images to GHCR
        run: |
          # Push the main app image
          docker push ghcr.io/${{ github.repository_owner }}/${IMAGE}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/${IMAGE}:${OPENFHE_TAG}


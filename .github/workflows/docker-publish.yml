name: Build and Push Docker Image

# El flujo se ejecuta en cada push a la rama main
on:
  push:
    branches:
      - main  # O la rama que prefieras

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Load environment variables from .env
      - name: Load environment variables
        id: load-env
        run: |
          if [ ! -f .env ]; then
            echo ".env file not found, aborting!"
            exit 1
          fi
          # Cargar variables desde .env
          set -o allexport
          source .env
          set +o allexport
          # Exportar las variables para que estÃ©n disponibles en otros pasos
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "OPENFHE_TAG=$OPENFHE_TAG" >> $GITHUB_ENV
          echo "OPENFHE_SDK_PYTHON_TAG=$OPENFHE_SDK_PYTHON_TAG" >> $GITHUB_ENV

      # Log in to GHCR (GitHub Container Registry)
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Build the Docker image and pass the environment variables as build arguments
      - name: Build Docker image
        run: |
          docker build \
            --no-cache \
            --build-arg OPENFHE_TAG=$OPENFHE_TAG \
            --build-arg OPENFHE_SDK_PYTHON_TAG=$OPENFHE_SDK_PYTHON_TAG \
            -t ghcr.io/${{ github.repository_owner }}/$IMAGE:${{ github.sha }} \
            -t ghcr.io/${{ github.repository_owner }}/$IMAGE:$OPENFHE_TAG .

      # Push the Docker image to GHCR
      - name: Push Docker images to GHCR
        run: |
          # Push the main app image
          docker push ghcr.io/${{ github.repository_owner }}/${IMAGE}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/${IMAGE}:${OPENFHE_TAG}

